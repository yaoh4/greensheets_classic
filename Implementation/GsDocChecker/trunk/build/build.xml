<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." default="build" name="DocChecker">

	<!--

	File: build.xml
	Description: This ant file is used to build the 'Greensheets Document Checker', the java application.
	Author: Abdul Latheef - Number Six Software 2006

	-->

	<!--
	########### Standard Properties Settings - DO NOT EDIT ###########
	-->

    <!-- make environment variables available to build script -->
    <property environment="env"/>       
 
	<!--
	########### App Properties Settings - Edit as Needed #############
	-->    
    <property name="jar.name"               value="DocChecker-1.1.0.jar"/>
    <property name="distribution.dir"       value="./dist"/>
    <property name="app.config.dir"         value="./appconfig"/>
    <property name="src.java.dir"           value="./src"/>
    <property name="doc.dir"		        value="./docs"/>
    <property name="lib.dir"                value="${distribution.dir}/lib"/>
    <property name="java.classes.dir"       value="${distribution.dir}"/>

	<!--
	########### Project.Classpath Settings - Edit as Needed ###########
	-->
 
    <path id="project.classpath">
        <pathelement path="${classpath}"/>
  	
    	<fileset dir="${lib.dir}">
		    <include name="*.jar"/>
		</fileset>
    </path>
    <property name="project.classpath" refid="project.classpath"/>
    
	<!-- ***************************************************************
								clean

	This target cleans all .class files, .jar file.
	********************************************************************-->
	<target name="clean" 
			description="cleans all all .class files, .jar file">
		<delete includeEmptyDirs="true">
			<fileset dir="${java.classes.dir}" includes="**/*.class"/>
		</delete>
		<delete includeEmptyDirs="true">
			<fileset dir="${distribution.dir}" includes="DocChecker*.jar"/>
		</delete>
	</target>

    
	<!-- ***************************************************************
								compile

	compiles the java source files using the classpath specified
	also copies any resource files that are in the java source
	directories.
	********************************************************************-->
	<target name="compile" depends="clean"
			description="compiles the java source files using the classpath specified" >

		<!-- create the classed dir -->
		<mkdir dir="${java.classes.dir}"/>        

		<echo> project.classpath: ${project.classpath} </echo>
		<echo> lib.dir: ${lib.dir} </echo>
		<javac srcdir="${src.java.dir}"
			destdir="${java.classes.dir}">     
			<classpath>
			  <pathelement path="${classpath}"/>
			  <fileset dir="${lib.dir}">
				<include name="**/*.jar"/>
			  </fileset>
			</classpath>
		</javac>
	</target>
	
	<!-- build -->
	<target name="build" depends="compile"   
			description="create distribution element (jar)">
		<!-- create war file -->
		<jar destfile="${jar.name}" basedir="${distribution.dir}"  includes="*.*" update="true">
		</jar>
	</target>
</project>
