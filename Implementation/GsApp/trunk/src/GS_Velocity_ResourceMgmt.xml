<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <!-- This file is to create a mini-context (a mini IoC container) and use it inside
         GreensheetResourceManager[Impl], which is a class that Velocity machinery instantiates 
         directly and can't be forced to obtain it from the main Spring-created context, 
         but which, however, needs an instance of a service provider class that, in turn, 
         needs its DAO object, etc. - so it's good to have Spring inject all these dependencies. 
    -->


    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="locations">
            <list>
                <value>file:${conf.dir}/greensheets/db.properties</value>
            </list>
        </property>
    </bean>


    <bean id="greensheetFormTemplateService" class="gov.nih.nci.iscs.numsix.greensheets.services.GreensheetFormTemplateServiceImpl">
        <property name="greensheetFormTemplateDAO" ref="greensheetFormTemplateDAO" />
    </bean>   

    <bean id="greensheetFormTemplateDAO" class="gov.nih.nci.cbiit.atsc.dao.spring.GreensheetFormTemplateDAOImpl">
         <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>        

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName" value="${jdbc.datasource}" />
     </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>